- name: Add CNAME record for www
  blockinfile:
    path: /etc/named/{{ hostname }}.{{ domain_name }}
    block: |
      www IN CNAME {{ hostname }}.{{ domain_name }}.
    marker: 
      "; {mark} ANSIBLE MANAGED BLOCK for CNAME for www"
  notify: restart named

- name: install httpd 
  dnf:
    name: ["httpd", "mod_ssl"]
    state: installed

- name: Add http rule to firewalld 
  firewalld:
    service: http
    permanent: yes
    state: enabled
  notify: restart firewalld

- name: Create folder for apache 
  file:
    path: "{{ item }}" 
    state: directory
    mode: 0755
    owner: apache
    group: apache
    recurse: yes
  with_items:
  - /var/www
  - /var/www/html/www.{{ hostname }}/public_html

- name: Create a config for www virtual host
  template:
    src: vhost_www.j2
    dest: /etc/httpd/conf.d/{{ hostname }}.conf
    owner: root
    group: root
    mode: 0644

- name: create an index.html file
  copy:
    dest: /var/www/html/www.{{ hostname }}/public_html/index.html
    content: |
        www.{{ hostname }}.{{ domain_name }}
    owner: root
    group: root
    mode: 0644
  notify: restart httpd

- name: dnf install python3-pip 
  dnf:
    name: python3-pip
    state: installed

- name: pip3 install flask
  pip:
    name: flask
    state: latest

- name: Add CNAME record for proxy
  blockinfile:
    path: /etc/named/{{ hostname }}.{{ domain_name }}
    block: |
      proxy IN CNAME {{ hostname }}.{{ domain_name }}.
    marker: 
      "; {mark} ANSIBLE MANAGED BLOCK for CNAME for proxy"
  notify:
  - increment serial
  - restart named

- name: Make a proxy user
  user:
    name: proxy
    state: present

- name: Create a file /usr/local/lib/server.py
  copy:
    src: website.py
    dest: /usr/local/lib/server.py
    owner: proxy
    group: proxy
    mode: 0644
    
- name: Create proxy service 
  copy:
    src: proxy.service
    dest: /etc/systemd/system/proxy.service
    owner: root
    group: root
    mode: 0644

- name: Create virtual host for proxy
  template:
    src: vhost_proxy.j2
    dest: /etc/httpd/conf.d/proxy.{{ hostname }}.conf
    owner: root
    group: root
    mode: 0644
  notify: restart httpd

- name: Seboolean | this equates to 'setsebool -P httpd_can_network_connect=1'
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: Reload systemctl service files systemctl daemon-reload
  systemd:
    daemon_reload: yes
    name: proxy
    state: started
    enabled: yes

- name: dnf install php-mysqlnd php-fpm mariadb-server httpd tar curl php-json, python3-mysqlclient, mod_security
  dnf:
    name: ['php-mysqlnd', 'php-fpm', 'mariadb-server', 'httpd',  'tar', 'curl', 'php-json', 'python3-mysqlclient', 'mod_security']
    state: installed

- name: start and enable mariadb
  service:
    name: mariadb
    state: started
    enabled: yes

- name: change mysql root password
  mysql_user:
    name: root
    password: '{{ mysql_password }}'
    state: present
    host: 'localhost'
  ignore_errors: true

- name: create a database wordpress
  mysql_db:
    name: wordpress
    state: present
    login_password: "{{ mysql_password }}"

- name: Now we need to create a new user admin, with an insecure password pass
  mysql_user:
    name: admin
    password: pass
    login_password: "{{ mysql_password }}"
    priv: '*.*:ALL'
    host: localhost

- name: download wordpress
  uri:
    url: https://wordpress.org/latest.tar.gz
    dest: /tmp/wordpress.tar.gz
    mode: '0644'
    force: yes

- name: extract wordpress to /var/www/html
  unarchive:
    src: /tmp/wordpress.tar.gz
    remote_src: yes
    dest: /var/www/html
    owner: apache
    group: apache
    creates: /var/www/html/wordpress

- name: Sefcontext | this equates to 'chcon -t httpd_sys_rw_content_t /var/www/html/wordpress -R'
  sefcontext:
    target: '/var/www/html/wordpress(/.*)?'
    setype: httpd_sys_rw_content_t
    state: present

- name: create log files
  file: 
    path: /var/log/httpd/{{ item }}
    state: touch
    owner: root
    group: root
    mode: 0755
  with_items: 
  - php-errors.log
  - www-php-errors.log
  - www.{{ hostname }}-forensic.log

- name: change log files 
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
  - { src: "php-fpm.conf", dest: "/etc/php-fpm.conf" }
  - { src: "www.conf", dest: "/etc/php-fpm.d/www.conf"}

- name: create virtual host for wordpress
  template:
    src: vhost_wordpress.j2
    dest: /etc/httpd/conf.d/wordpress.{{ hostname }}.conf
    owner: apache
    group: apache
    mode: 0644
  notify:
  - restart httpd
  - restart php-fpm

- name: Add CNAME for wordpress
  blockinfile:
    path: /etc/named/{{ hostname }}.{{ domain_name }}
    block: |
      wordpress IN CNAME {{ hostname }}.{{ domain_name }}.
    marker: 
      "; {mark} ANSIBLE MANAGED BLOCK for CNAME for wordpress"
  notify: 
  - increment serial
  - restart named

- name: Add mode_security rules
  copy:
    src: modsecurity_localrules.conf
    dest: /etc/httpd/modsecurity.d/local_rules/modsecurity_localrules.conf
    owner: root
    group: root
    mode: 0644
  notify: restart httpd

- name: flush handlers
  meta: flush_handlers