- name: Create a new extended partition with a size of 1GiB
  community.general.parted:
    device: /dev/sdb
    number: 1
    part_type: extended
    state: present
    part_start: 2048s
    part_end: 2097151s

- name: Create two logical partitions
  community.general.parted:
    device: /dev/sdb
    number: '{{ item.number }}'
    part_type: logical
    state: present
    part_start: '{{ item.start }}'
    part_end: '{{ item.end }}'
  with_items:
    - { number: 5, start: 4096s, end: 1048574s }
    - { number: 6, start: 1050624s, end: 2097151s }

- name: Create a ext4 filesystem on /dev/sdb5
  community.general.filesystem:
    fstype: ext4
    dev: /dev/sdb5
    opts: -L "lab7FSext4"

- name: Create an xfs filesystem on /dev/sdb6
  community.general.filesystem:
    fstype: xfs
    dev: /dev/sdb6
    opts: -L "lab7FSxfs"

- name: Create dirs to mount to
  file:
    path: "{{ item.path }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  with_items:
    - path: /lab7/fs-ext4
    - path: /lab7/fs-xfs

- name: Mount ext4 and xfs filesystems
  ansible.posix.mount:
    src: "{{ item.src }}"
    path: "{{ item.path }}"
    fstype: "{{ item.fstype }}"
    state: mounted
  with_items:
    - src: /dev/sdb5
      path: /lab7/fs-ext4
      fstype: ext4
    - src: /dev/sdb6
      path: /lab7/fs-xfs
      fstype: xfs

- name: systemctl daemon-reload
  systemd:
    name: systemctl
    state: reloaded
    enabled: yes
    masked: no

- name: dnf install nfs-utils
  dnf:
    name: nfs-utils
    state: installed

- name: Create dirs for nfs and samba
  file:
    path: "{{ item.path }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  with_items:
    - path: /shares/nfs
    - path: /mnt/nfs
    - path: /shares/samba

- name: restart nfs-server
  service:
    name: nfs-server
    state: restarted
    enabled: yes
    masked: no

- name: Setup nfs export
  lineinfile:
    path: /etc/exports
    line: "/shares/nfs 127.0.0.1"   # !
    state: present
    create: yes

- name: run exportfs -a
  command: exportfs -a

- name: mount nfs filesystem
  ansible.posix.mount:
    src: "{{hostname}}.{{domain_name}}:/shares/nfs"
    path: /mnt/nfs
    fstype: nfs
    state: mounted

- name: Open 111, 2049 ports
  firewalld:
    port: "{{ item }}/tcp"
    permanent: yes
    state: enabled
  with_items:
    - 111
    - 2049
  notify: restart firewalld

- name: Install the following packages - samba samba-common samba-client cifs-utils
  dnf:
    name: [ "samba", "samba-common", "samba-client", "cifs-utils" ]
    state: installed

- name: Create a samba_group
  group:
    name: samba_group
    state: present

- name: usermod -a -G samba_group scoring
  user:
    name: scoring
    groups: samba_group
    append: yes

- name: usermod -a -G samba_group centos
  user:
    name: centos
    groups: samba_group
    append: yes

- name: set Samba passwords for each user
  shell: "printf '{{ item.passwd }}\n{{ item.passwd }}\n' | smbpasswd -s -a {{ item.name }}"
  register: output
  changed_when: '"Added user" in output.stdout'
  with_items:
    - name: scoring
      passwd: 2daysuperadmin

- name: set samba permissions
  file:
    path: /shares/samba
    state: directory
    mode: 755
    owner: root
    group: samba_group
    recurse: yes

- name: set sefcontext samba_share_t
  sefcontext:
    target: "/shares/samba"
    setype: samba_share_t
    state: present

- name: Edit /etc/samba/smb.conf
  copy:
    src: smb.conf
    dest: /etc/samba/smb.conf
    mode: '0644'
    owner: root
    group: root

- name: restart smb
  service:
    name: smb
    state: restarted
    enabled: yes
    masked: no

- name: Open 139, 445 ports
  firewalld:
    port: "{{ item }}/tcp"
    permanent: yes
    state: enabled
  with_items:
    - 139
    - 445
  notify: restart firewalld

- name: Consul pwd setup
  shell: /usr/local/bin/consul kv put object/{{hostname}} consul123

- name: download minio
  get_url:
    url: https://dl.min.io/client/mc/release/linux-amd64/mc
    dest: /usr/bin/mc
    owner: root
    mode: "u+rwx"

- name: Add our own host to scoring
  shell: mc config host add scoring https://scoring.sa.cs.ut.ee:9000 {{ hostname }} consul123

- name: create a bucket
  shell: mc mb scoring/{{ hostname }}
  register: output
  changed_when: '"Bucket created successfully" in output.stdout'
  ignore_errors: true

- name: create scoringtestfile
  lineinfile:
    path: /tmp/scoringtestfile
    line: "{{ hostname }}"
    state: present
    create: yes

- name: add scoringtestfile into the uppermost path in your bucket.
  shell: mc cp /tmp/scoringtestfile scoring/{{ hostname }}/scoringtestfile

- name: restart firewalld
  service:
    name: firewalld
    state: restarted
    enabled: yes
    masked: no